import fs from 'fs';

/**
        * Boiler runner
        * This file has been auto-generated for project 'main.mjs or main.es6' by Boiler.
        * 
        * 
        * Last modification at: Sat Nov 05 2022 10:47:07 GMT+0300 (GMT+03:00)
        * 
        * 
        * DO NOT EDIT THIS FILE. IT WILL NOT BE USED IF EDITED.
        * 
        * (c) Mybutton Corporation, 2022. All rights reserved.
        * 
        * Boiler.boil();
        */
        export class BoilerBuild {
            /**
             * @param {string} file_name The file to run when building, defaults to `main.mjs`
             */
            boil(file_name) { 
                if (!fs.existsSync(process.cwd() + '/out')) fs.mkdirSync(process.cwd() + '/out'); //create 'out'
                if (!fs.existsSync(process.cwd() + '/out/boil')) fs.mkdirSync(process.cwd() + '/out/boil'); //create 'boiler'
                fs.writeFileSync(process.cwd() + '/out/boil/run', 'node ./out/boil/start.mjs $*'); //for linux & mac
                fs.writeFileSync(process.cwd() + '/out/boil/run.cmd', '@node ./out/boil/start.mjs %*'); //for windows
                fs.writeFileSync(process.cwd() + '/out/boil/start.mjs', `// Auto-generated by Boiler.
// Do not edit. It will cause runtime issues when edited.
let cliArgsF = process.argv.slice(2);
import { fileURLToPath } from "url";
export function setArguments(_arguments = []) { cliArgsF = _arguments; };
export function runNow() {
    import('../../main.mjs').then(async app => {
        let BoilerApp = new app.Main();
        BoilerApp.cli.rawArgs = process.argv;
        BoilerApp.cli.args = cliArgsF;
        let startDate = Date.now();
        let appRuntime = await BoilerApp.run();
        BoilerApp.beforeExit({exitCode: appRuntime, totalUptime: Date.now() - startDate, process: process});
        return process.exit(appRuntime);
    });
}; 

if (process.argv[1] === fileURLToPath(import.meta.url)) {
  runNow();
}`);
            };
        }